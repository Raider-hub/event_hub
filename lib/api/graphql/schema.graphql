# Exposes a URL that specifies the behavior of this scalar.
directive @specifiedBy(
  # The URL that specifies the behavior of this scalar.
  url: String!
) on SCALAR
type Category {
  id: ID!
  name: String!
  members: [User!]!
}

type CategoryPayload {
  ok: Boolean!
  message: String!
  data: Category
}

type Event {
  id: ID!
  title: String!
  description: String!
  cover_photo: String!
  date: String!
  time: String!
  location: Location!
  members: [User!]!
  host: User!
  createdAt: String!
  updatedAt: String
}

type EventPayload {
  ok: Boolean!
  message: String!
  data: Event
}

input ILocation {
  latitude: String!
  longitude: String!
}

type Location {
  latitude: String!
  longitude: String!
}

type Mutation {
  create_category(name: String!): CategoryPayload!
  delete_category(id: Int!): CategoryPayload!
  create_event(
    title: String!
    description: String!
    cover_photo: Upload!
    date: String!
    time: String!
    location: ILocation!
    members: [Int!]
  ): EventPayload!
  update_event(
    eventId: Int!
    title: String
    description: String
    cover_photo: Upload
    date: String
    time: String
    location: ILocation
    members: [Int!]
  ): EventPayload!
  delete_event(id: Int!): EventPayload!
  invite_friend(userId: [Int!]!, eventId: Int!): EventPayload!
  add_review(userId: Int!, text: String!, rating: Int): ReviewPayload!
  edit_review(id: Int!, text: String, rating: Int): ReviewPayload!
  delete_review(id: Int!): ReviewPayload!
  create_user(
    fullname: String!
    email: String!
    password: String!
  ): SignPayload!
  verify_otp(otp: String!): SignPayload!
  resend_otp: SignPayload!
  login(email: String!, password: String!): SignPayload!
  forgot_password(email: String!): SignPayload!
  verify_password_reset(code: String!): SignPayload!
  reset_password(newPassword: String!): SignPayload!
  change_password(oldPassword: String!, newPassword: String!): UserPayload!
  update_profile(
    fullname: String
    date_of_birth: String
    addres: String
    about: String
  ): UserPayload!
  choose_location(latitude: String!, longitude: String!): Location!
  delete_user(id: Int!): UserPayload!
  follow_user(userId: [Int!]!): UserPayload!
  unfollow_user(userId: [Int!]!): UserPayload!
  add_interest(interest: [Int!]!): [Category!]!
  remove_interest(interest: [Int!]!): [Category!]!
  change_profile_pic(photo: Upload!): String!
}

type Query {
  categories(filter: String): [Category!]!
  events(filter: String): [Event!]!
  reviews(filter: String): [Review!]!
  profile: User!
  users(filter: String): [User!]!
}

type Review {
  id: ID!
  text: String!
  rating: Int
  user: [User!]!
}

type ReviewPayload {
  ok: Boolean!
  message: String!
  data: Review
}

type SignPayload {
  ok: Boolean!
  message: String!
  token: String
}

type Subscription {
  new_invitation(userId: Int!): Event!
  new_follower(userId: Int!): User!
}

scalar Upload

type User {
  id: ID!
  fullname: String!
  dob: String
  email: String!
  address: String
  profile_pic: String
  about: String
  review: [Review!]
  interest: [Category!]!
  event: [Event!]
  event_hosted: [Event!]
  followers: [User!]
  following: [User!]
  totalFollowers: Int!
  totalFollowing: Int!
}

type UserPayload {
  ok: Boolean!
  message: String!
  data: User
}

